version: '3.8'
services:
  # Databases
  postgres:
    image: postgres:13
    environment:
      POSTGRES_DB: microservices_db
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - microservices-network

  mongodb:
    image: mongo:5.0
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
    networks:
      - microservices-network

  redis:
    image: redis:6.2
    ports:
      - "6379:6379"
    networks:
      - microservices-network

  rabbitmq:
    image: rabbitmq:3-management
    environment:
      RABBITMQ_DEFAULT_USER: admin
      RABBITMQ_DEFAULT_PASS: password
    ports:
      - "5672:5672"
      - "15672:15672"  # Management UI
    networks:
      - microservices-network

  # Microservices
  user-service:
    build: ./user-service
    ports:
      - "8081:8080"
    depends_on:
      - postgres
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/microservices_db
      - SPRING_DATASOURCE_USERNAME=admin
      - SPRING_DATASOURCE_PASSWORD=password
    networks:
      - microservices-network

  product-service:
    build: ./product-service
    ports:
      - "8082:8080"
    depends_on:
      - postgres
      - redis
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/microservices_db
      - SPRING_DATASOURCE_USERNAME=admin
      - SPRING_DATASOURCE_PASSWORD=password
      - SPRING_REDIS_HOST=redis
      - SPRING_REDIS_PORT=6379
    networks:
      - microservices-network

  order-service:
    build: ./order-service
    ports:
      - "8083:8080"
    depends_on:
      - postgres
      - rabbitmq
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/microservices_db
      - SPRING_DATASOURCE_USERNAME=admin
      - SPRING_DATASOURCE_PASSWORD=password
      - SPRING_RABBITMQ_HOST=rabbitmq
      - SPRING_RABBITMQ_USERNAME=admin
      - SPRING_RABBITMQ_PASSWORD=password
    networks:
      - microservices-network

  payment-service:
    build: ./payment-service
    ports:
      - "8084:8080"
    depends_on:
      - postgres
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/microservices_db
      - SPRING_DATASOURCE_USERNAME=admin
      - SPRING_DATASOURCE_PASSWORD=password
    networks:
      - microservices-network

  notification-service:
    build: ./notification-service
    ports:
      - "8085:8080"
    depends_on:
      - mongodb
      - rabbitmq
    environment:
      - SPRING_DATA_MONGODB_URI=mongodb://admin:password@mongodb:27017/notifications
      - SPRING_RABBITMQ_HOST=rabbitmq
      - SPRING_RABBITMQ_USERNAME=admin
      - SPRING_RABBITMQ_PASSWORD=password
    networks:
      - microservices-network

  # API Gateway
  api-gateway:
    build: ./api-gateway
    ports:
      - "8080:8080"
    depends_on:
      - user-service
      - product-service
      - order-service
      - payment-service
      - notification-service
    networks:
      - microservices-network

  # Frontend
  frontend:
    build: ./frontend
    ports:
      - "3000:3000"
    depends_on:
      - api-gateway
    networks:
      - microservices-network

volumes:
  postgres_data:
  mongodb_data:

networks:
  microservices-network:
    driver: bridge