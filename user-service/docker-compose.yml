services:
  user-db:
    image: postgres:13
    container_name: user-service-db
    environment:
      POSTGRES_DB: user_service_db
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: password
    ports:
      - "5433:5432"
    volumes:
      - user_db_data:/var/lib/postgresql/data
      - ../z-init-db/user_service_db.sql:/docker-entrypoint-initdb.d/user_service_db.sql
    networks:
      - user-service-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U admin -d user_service_db"]
      interval: 10s
      timeout: 5s
      retries: 5

  user-service:
    build: .
    container_name: user-service-app
    ports:
      - "8080:8080"
    depends_on:
      user-db:
        condition: service_healthy
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://user-db:5432/user_service_db
      - SPRING_DATASOURCE_USERNAME=admin
      - SPRING_DATASOURCE_PASSWORD=password
    networks:
      - user-service-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

volumes:
  user_db_data:

networks:
  user-service-network:
    driver: bridge
