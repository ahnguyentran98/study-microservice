# Docker-specific configuration for user-service
# Server Configuration
server.port=8080
spring.application.name=user-service

# Database Configuration (uses environment variables from docker-compose)
spring.datasource.url=${SPRING_DATASOURCE_URL:jdbc:postgresql://user-db:5432/user_service_db}
spring.datasource.username=${SPRING_DATASOURCE_USERNAME:admin}
spring.datasource.password=${SPRING_DATASOURCE_PASSWORD:password}
spring.datasource.driver-class-name=org.postgresql.Driver

# JPA Configuration
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.format_sql=true

# JWT Configuration
jwt.secret=mySecretKey123456789012345678901234567890
jwt.expiration=86400000

# Actuator Configuration
management.endpoints.web.exposure.include=health,info,metrics
management.endpoint.health.show-details=always
management.server.port=8080

# Logging Configuration
logging.level.com.microservices.userservice=INFO
logging.level.org.springframework.security=INFO
logging.level.org.springframework.web=INFO

# Spring Boot 3 Configuration
spring.jpa.open-in-view=false

# Docker-specific optimizations
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true
